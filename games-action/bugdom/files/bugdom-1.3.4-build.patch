From 7927e989fa59d640b78949026a3ad4ebe6c41578 Mon Sep 17 00:00:00 2001
From: Bryan Gardiner <bog@khumba.net>
Date: Mon, 4 Mar 2024 06:03:00 -0800
Subject: [PATCH] Patch to use system-wide directories.

---
 CMakeLists.txt |  7 +++----
 src/Boot.cpp   | 36 ++----------------------------------
 2 files changed, 5 insertions(+), 38 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 620a07a..820f422 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -62,8 +62,6 @@ add_compile_definitions(POMME_CASE_SENSITIVE_FSSPEC=1)
 # DEPENDENCIES
 #------------------------------------------------------------------------------
 
-add_subdirectory(extern/Pomme)
-
 find_package(SDL2 REQUIRED COMPONENTS main)
 find_package(OpenGL REQUIRED)
 
@@ -123,8 +121,8 @@ endif()
 target_include_directories(${GAME_TARGET} PRIVATE
 	${SDL2_INCLUDE_DIRS}
 	${OPENGL_INCLUDE_DIR}
-	extern/Pomme/src
-	extern/Pomme/src/QD3D
+	/usr/include/Pomme-@POMME_VER@
+	/usr/include/Pomme-@POMME_VER@/QD3D
 	${GAME_SRCDIR}/Headers
 )
 
@@ -195,6 +193,7 @@ else()
 	set_target_properties(${GAME_TARGET} PROPERTIES COMPILE_DEFINITIONS_DEBUG "_CONSOLE")
 endif()
 
+target_link_directories(${GAME_TARGET} PRIVATE @POMME_LIBDIR@)
 target_link_libraries(${GAME_TARGET} ${GAME_LIBRARIES})
 
 #------------------------------------------------------------------------------
diff --git a/src/Boot.cpp b/src/Boot.cpp
index a9078a2..2ccd05b 100644
--- a/src/Boot.cpp
+++ b/src/Boot.cpp
@@ -34,39 +34,7 @@ extern "C"
 
 static fs::path FindGameData(const char* executablePath)
 {
-	fs::path dataPath;
-
-	int attemptNum = 0;
-
-#if !(__APPLE__)
-	attemptNum++;		// skip macOS special case #0
-#endif
-
-	if (!executablePath)
-		attemptNum = 2;
-
-tryAgain:
-	switch (attemptNum)
-	{
-		case 0:			// special case for macOS app bundles
-			dataPath = executablePath;
-			dataPath = dataPath.parent_path().parent_path() / "Resources";
-			break;
-
-		case 1:
-			dataPath = executablePath;
-			dataPath = dataPath.parent_path() / "Data";
-			break;
-
-		case 2:
-			dataPath = "Data";
-			break;
-
-		default:
-			throw std::runtime_error("Couldn't find the Data folder.");
-	}
-
-	attemptNum++;
+	fs::path dataPath("/usr/share/Bugdom");
 
 	dataPath = dataPath.lexically_normal();
 
@@ -76,7 +44,7 @@ tryAgain:
 	FSSpec dummySpec;
 	if (noErr != FSMakeFSSpec(gDataSpec.vRefNum, gDataSpec.parID, ":Skeletons:DoodleBug.3dmf", &dummySpec))
 	{
-		goto tryAgain;
+		throw std::runtime_error("Error loading resources from the Data folder.");
 	}
 
 	return dataPath;
-- 
2.43.0

